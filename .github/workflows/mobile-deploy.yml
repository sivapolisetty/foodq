# GitHub Actions Workflow for NoenCircles Mobile Deployment Pattern
# GraBeat - iOS TestFlight & Android Firebase App Distribution

name: Mobile App Deployment

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'mobile-client/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'mobile-client/**'
  workflow_dispatch:
    inputs:
      deploy_ios:
        description: 'Deploy to iOS TestFlight'
        required: false
        default: 'true'
        type: boolean
      deploy_android:
        description: 'Deploy to Android Firebase'
        required: false
        default: 'true'
        type: boolean

env:
  FLUTTER_VERSION: '3.24.3'
  JAVA_VERSION: '17'
  XCODE_VERSION: '15.0'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      mobile: ${{ steps.changes.outputs.mobile }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            mobile:
              - 'mobile-client/**'

  test:
    needs: changes
    if: needs.changes.outputs.mobile == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile-client
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Check formatting
        run: dart format --set-exit-if-changed .

  build-ios:
    needs: [changes, test]
    if: (needs.changes.outputs.mobile == 'true' || github.event_name == 'workflow_dispatch') && (github.ref == 'refs/heads/main' || github.event.inputs.deploy_ios == 'true')
    runs-on: macos-14
    defaults:
      run:
        working-directory: mobile-client
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          working-directory: mobile-client/ios

      - name: Install Fastlane
        working-directory: mobile-client/ios
        run: |
          bundle config path vendor/bundle
          bundle install

      - name: Install CocoaPods
        working-directory: mobile-client/ios
        run: pod install

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Setup iOS signing
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
        working-directory: mobile-client/ios
        run: bundle exec fastlane setup_ci

      - name: Build and deploy to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
        working-directory: mobile-client/ios
        run: bundle exec fastlane beta

      - name: Upload iOS artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            mobile-client/build/ios/
            mobile-client/ios/fastlane/report.xml
          retention-days: 7

  build-android:
    needs: [changes, test]
    if: (needs.changes.outputs.mobile == 'true' || github.event_name == 'workflow_dispatch') && (github.ref == 'refs/heads/main' || github.event.inputs.deploy_android == 'true')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile-client
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          working-directory: mobile-client/android

      - name: Install Fastlane
        working-directory: mobile-client/android
        run: |
          bundle config path vendor/bundle
          bundle install

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Setup Android signing
        env:
          GOOGLE_PLAY_JSON_KEY_CONTENT: ${{ secrets.GOOGLE_PLAY_JSON_KEY_CONTENT }}
        run: |
          echo '${{ secrets.GOOGLE_PLAY_JSON_KEY_CONTENT }}' > android/google-play-key.json
          echo "GOOGLE_PLAY_JSON_KEY_PATH=$PWD/android/google-play-key.json" >> $GITHUB_ENV

      - name: Setup Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
        working-directory: mobile-client/android
        run: bundle exec fastlane setup_firebase

      - name: Build and distribute via Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          GOOGLE_PLAY_JSON_KEY_PATH: ${{ env.GOOGLE_PLAY_JSON_KEY_PATH }}
        working-directory: mobile-client/android
        run: bundle exec fastlane beta

      - name: Upload Android artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: android-build-artifacts
          path: |
            mobile-client/build/app/outputs/
            mobile-client/android/fastlane/report.xml
          retention-days: 7

      - name: Cleanup secrets
        if: always()
        run: rm -f android/google-play-key.json

  notify:
    needs: [build-ios, build-android]
    if: always() && (needs.build-ios.result != 'skipped' || needs.build-android.result != 'skipped')
    runs-on: ubuntu-latest
    
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_OUTPUT

      - name: Deployment Summary
        run: |
          echo "## 📱 Mobile Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** ${{ steps.date.outputs.date }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.build-ios.result }}" != "skipped" ]; then
            if [ "${{ needs.build-ios.result }}" == "success" ]; then
              echo "✅ **iOS:** Successfully deployed to TestFlight" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **iOS:** Deployment failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️ **iOS:** Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.build-android.result }}" != "skipped" ]; then
            if [ "${{ needs.build-android.result }}" == "success" ]; then
              echo "✅ **Android:** Successfully distributed via Firebase" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Android:** Distribution failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️ **Android:** Skipped" >> $GITHUB_STEP_SUMMARY
          fi